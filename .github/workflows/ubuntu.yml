name: Ubuntu

on:
  push:
    branches: [ main ]
    tags: ['v*']
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - name: Checkout source code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install CUDA 
      uses: Jimver/cuda-toolkit@v0.2.14
      id: cuda-toolkit
      with:
        cuda: '11.7.0'
        method: 'network'
    - name: Install dependencies
      run: |
        ./scripts/actions/install_deps_ubuntu.sh
        python -m pip install -U pip wheel setuptools
    - name: CMake
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_GLEW=ON -DBUILD_GLFW=ON -DBUILD_PNG=ON -DBUILD_JSONCPP=ON
    - name: make
      run: |
        cd build
        make
        make pip-package
    - name: Rename package
      run: |
        cd build/lib/python_package/pip_package
        rename s/linux/manylinux1/ *.whl
    - name: Publish package
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      env:
        PYPI_API_TOKEN: ${{ secrets.pypi_api_token }}
      run: |
        python -m pip install twine
        cd build/lib/python_package
        python -m twine upload -u "__token__" -p ${PYPI_API_TOKEN} pip_package/*